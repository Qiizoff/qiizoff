from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.utils.markdown import text
from aiogram.dispatcher import Dispatcher

from config import token
import keyboards as kb


bot = Bot(token=token)
dp = Dispatcher(bot)


@dp.callback_query_handler(lambda c: c.data and c.data.startswith('btn'))
async def process_callback_kb1btn1(callback_query: types.CallbackQuery):
    code = callback_query.data[-1]
    if code.isdigit():
        code = int(code)
    if code == 2:
        # await bot.answer_callback_query(callback_query.id, text='–ù–∞–∂–∞—Ç–∞ –≤—Ç–æ—Ä–∞—è –∫–Ω–æ–ø–∫–∞')
        # await bot.send_message(message.chat.id, "–ü—Ä–æ—á–∏–µ inline –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:", reply_markup=kb.inline_kb_full)
        await bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", reply_markup=kb.inline_request)
    elif code == 5:
        await bot.answer_callback_query(callback_query.id, text='–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å –Ω–æ–º–µ—Ä–æ–º 5.\n–ê —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –¥–ª–∏–Ω–æ–π –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤ üòâ', show_alert=True)
    else:
        await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, f'–ù–∞–∂–∞—Ç–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞! code={code}')


bot_start = '''
–ü—Ä–∏–≤–µ—Ç,
–Ø —Ä–∞—Å–ø–æ–∑–Ω–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π!
–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –∏ —è —Ä–∞—Å–ø–æ–∑–Ω–∞—é –µ–µ –¥–ª—è —Ç–µ–±—èü§ü

–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.
'''

bot_help = text(
    "–°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:",
    "/start - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ",
    "/help - –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞",
    "\n–°–ø–∏—Å–æ–∫ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:",
    "/send - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω/–≥–µ–æ–ø–æ–∑–∏—Ü–∏—é",
    "/inline - inline –º–µ–Ω—é",
    "/reply - reply –º–µ–Ω—é",
    "/other - –ø—Ä–æ—á–µ–µ inline –º–µ–Ω—é",
    sep="\n"
)


@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await bot.send_message(message.chat.id, bot_start)


@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    await bot.send_message(message.chat.id, bot_help)


@dp.message_handler(commands=['send'])
async def process_send_command(message: types.Message):
    await bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:", reply_markup=kb.send)


@dp.message_handler(commands=['inline'])
async def process_inline_command(message: types.Message):
    await bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö inline –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:", reply_markup=kb.inline)


@dp.message_handler(commands=['reply'])
async def process_reply_command(message: types.Message):
    await bot.send_message(message.chat.id, "–°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö reply –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞:", reply_markup=kb.reply)


@dp.message_handler(commands=['other'])
async def process_other_command(message: types.Message):
    await bot.send_message(message.chat.id, "–ü—Ä–æ—á–∏–µ inline –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:", reply_markup=kb.inline_full)


@dp.callback_query_handler(lambda c: c.data == 'button_start')
async def process_button_start(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, bot_start)
    # await bot.send_message(callback_query.from_user.id, '–ù–∞–∂–∞—Ç–∞ –ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞!')
    # await bot.send_message(message.chat.id, bot_start)


@dp.callback_query_handler(lambda c: c.data == 'button_help')
async def process_button_help(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, bot_help)


@dp.callback_query_handler(lambda c: c.data == 'button_reply')
async def process_button_reply(callback_query: types.CallbackQuery):
    await bot.answer_callback_query(callback_query.id)
    await bot.send_message(callback_query.from_user.id, '/reply')


if __name__ == '__main__':
    executor.start_polling(dp)
